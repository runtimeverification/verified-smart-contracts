; gnosis: v0.0.1 from https://github.com/gnosis/safe-contracts/releases/tag/v0.0.1
;   files GnosisSafePersonalEdition.json and Proxy.json, bytecode version: deployedBytecode
; k      branch: casper_logs_rebased_2
; kevm   commit: master da45d15f93d7872e06e83d1d753079ccc6e5007c , 07/05/2018.

[root]
code: {MASTER_COPY_CODE}
comment:
k: (#execute => #halt) ~> _
callStack: _
wordStack: .WordStack => _
localMem: .Map => _
pc: 0 => _
gas: 10000000 => _
memoryUsed: 0 => _
callDepth: CD
log: _ => _
refund: _ => _
coinbase: _ => _
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(MASTER_COPY_ID) SetItem(PROXY_ID) SetItem(ORIGIN_ID) SetItem(1) _:Set
master_copy_bal: _
master_copy_storage: _:Map
master_copy_nonce: _
proxy_bal: 1000000000
proxy_nonce: _
origin_bal: _
origin_code: ""
origin_storage: _:Map
origin_nonce: _
accounts:
requires:
    andBool #range(0 <= CD < 1024)
ensures:
attribute:

; FIXME work Internal function, so cannot be specified through <callData>
[setupSafe]
output: _ => _
statusCode: _ => _
this: PROXY_ID
msg_sender: MSG_SENDER
callData: #abiCallData("setupSafe", (
            #array(#address(_), 2, (#address(OWNER_1), #address(OWNER_2))),
            #uint256(2),
            #address(0),
            #toBytes(0,0)))
callValue: 0
proxy_storage:
    (#hashedLocation({COMPILER}, {MASTER_COPY}, .IntList) |-> MASTER_COPY_ID)
    (#hashedLocation({COMPILER}, {MODULES}, 1) |-> (0 => 1))
    (#hashedLocation({COMPILER}, {OWNERS}, 1) |-> (0 => OWNER_1))
    (#hashedLocation({COMPILER}, {OWNERS}, OWNER_1) |-> (0 => OWNER_2))
    (#hashedLocation({COMPILER}, {OWNERS}, OWNER_2) |-> (0 => 1))
    (#hashedLocation({COMPILER}, {OWNERCOUNT}, .IntList) |-> (0 => 2))
    (#hashedLocation({COMPILER}, {THRESHOLD}, .IntList) |-> (0 => 2))
    (#hashedLocation({COMPILER}, {DOMAIN_SEPARATOR}, .IntList) |-> DOMAIN_SEPARATOR)
    _:Map
+requires:
    // Range
    andBool #rangeAddress(MSG_SENDER)
    andBool #rangeAddress(OWNER_1)
    andBool #rangeAddress(OWNER_2)
    andBool #rangeBytes(32, DOMAIN_SEPARATOR)
    //
    andBool OWNER_1 =/=Int 0
    andBool OWNER_1 =/=Int 1
    andBool OWNER_2 =/=Int 0
    andBool OWNER_2 =/=Int 1

[swapOwner]
output: _ => _
statusCode: _ => _
this: PROXY_ID
msg_sender: PROXY_ID
callData: #abiCallData("swapOwner", (#address(PREV_OWNER), #address(OLD_OWNER), #address(NEW_OWNER)))
callValue: 0
proxy_storage:
    (#hashedLocation({COMPILER}, {MASTER_COPY}, .IntList) |-> MASTER_COPY_ID)
    (#hashedLocation({COMPILER}, {OWNERS}, PREV_OWNER) |-> (OLD_OWNER => NEW_OWNER))
    (#hashedLocation({COMPILER}, {OWNERS}, OLD_OWNER) |-> (NEXT_OWNER => 0))
    (#hashedLocation({COMPILER}, {OWNERS}, NEW_OWNER) |-> (0 => NEXT_OWNER))
    _:Map
+requires:
    // Range
    andBool #rangeAddress(PREV_OWNER)
    andBool #rangeAddress(NEW_OWNER)
    andBool #rangeAddress(OLD_OWNER)
    andBool #rangeAddress(NEXT_OWNER)
    // Invariant
    andBool NEXT_OWNER =/=Int 0
    //
    andBool NEW_OWNER =/=Int 0
    andBool NEW_OWNER =/=Int 1
    andBool OLD_OWNER =/=Int 0
    andBool OLD_OWNER =/=Int 1


[execTransaction]
output: _ => _
statusCode: _ => _
this: PROXY_ID
msg_sender: MSG_SENDER
callData: #abiCallData("execTransaction", (
            #address(TO),
            #uint256(VALUE),
            #toBytes(0,0),
; Enum.Operation represented as uint8
            #uint8(0),
            #uint256(SAFETXGAS),
            #uint256(DATAGAS),
            #uint256(GAS_PRICE),
            #address(0),
            #address(REFUND_RECEIVER),
            #toBytes(0,0)))
callValue: 0
activeAccounts: SetItem(MASTER_COPY_ID) SetItem(PROXY_ID) SetItem(ORIGIN_ID) SetItem(TO) _:Set
proxy_bal: PROXY_BAL => _ /* value, gas fee */
origin_bal: ORIGIN_BAL => _ /* gas fee */
origin_nonce: ORIGIN_NONCE
proxy_storage:
    (#hashedLocation({COMPILER}, {MASTER_COPY}, .IntList) |-> MASTER_COPY_ID)
    (#hashedLocation({COMPILER}, {MODULES}, 1) |-> 1)
    (#hashedLocation({COMPILER}, {OWNERS}, 1) |-> OWNER)
    (#hashedLocation({COMPILER}, {OWNERS}, OWNER) |-> 1)
    (#hashedLocation({COMPILER}, {OWNERCOUNT}, .IntList) |-> 1)
    (#hashedLocation({COMPILER}, {THRESHOLD}, .IntList) |-> 1)
    (#hashedLocation({COMPILER}, {NONCE}, .IntList) |-> (0 => _))
    (#hashedLocation({COMPILER}, {DOMAIN_SEPARATOR}, .IntList) |-> DOMAIN_SEPARATOR)
    _:Map
accounts:
    <account>
      <acctID> TO </acctID>
      <balance> 0 => VALUE </balance>
      <code> .WordStack </code>
      <storage>
        _:Map
      </storage>
      <origStorage>
        _:Map
      </origStorage>
      <nonce> TO_NONCE </nonce>
    </account>
+requires:
    // Range
    andBool #rangeAddress(MSG_SENDER)
    andBool #rangeAddress(OWNER)
    andBool #rangeAddress(TO)
    andBool #rangeAddress(REFUND_RECEIVER)
    andBool #rangeUInt(256, VALUE)
    andBool #rangeUInt(256, SAFETXGAS)
    andBool #rangeUInt(256, DATAGAS)
    andBool #rangeUInt(256, GAS_PRICE)
    //bytes32 type
    andBool #rangeBytes(32, DOMAIN_SEPARATOR)
    andBool TO >Int 0 andBool (notBool TO in #precompiledAccounts(BYZANTIUM))

    andBool TO =/=Int PROXY_ID
    andBool TO_NONCE >Int 0
    andBool ORIGIN_NONCE >Int 0
    andBool CD <Int 1023

    //
    andBool OWNER =/=Int 0
    andBool OWNER =/=Int 1

    andBool GAS_PRICE ==Int 123
    andBool SAFETXGAS ==Int 123456
    andBool DATAGAS   ==Int 123456
    andBool VALUE ==Int 1234
    andBool PROXY_BAL >=Int 1000000000000000000


[execTransactionAndPaySubmitter_data]
output: _ => _
statusCode: _ => _
this: PROXY_ID
msg_sender: MSG_SENDER
callData: #abiCallData("execTransactionAndPaySubmitter", (
            #address(PROXY_ID),
            #uint256(0),
            #bytes(#abiCallData("changeMasterCopy", #address(NEW_MASTER_COPY))),
; Enum.Operation represented as uint8
            #uint8(0),
            #uint256(2000000),
            #uint256(3000000),
            #uint256(0),
            #address(0),
            #toBytes(0,0)))
callValue: 0
accounts:
activeAccounts: SetItem(MASTER_COPY_ID) SetItem(PROXY_ID) SetItem(CALLER_ID) _:Set
proxy_bal: PROXY_BAL => _ /* value, gas fee */
caller_bal: CALLER_BAL => _ /* gas fee */
proxy_storage:
    (#hashedLocation({COMPILER}, {MASTER_COPY}, .IntList) |-> (MASTER_COPY_ID => NEW_MASTER_COPY))
    (#hashedLocation({COMPILER}, {NONCE}, .IntList) |-> (0 => _))
    _:Map
+requires:
    // ranges
    andBool CD <Int 1022
    andBool #rangeAddress(NEW_MASTER_COPY)
    andBool NEW_MASTER_COPY =/=Int 0

    andBool CALLER_NONCE >Int 0
    andBool CALLER_ID ==Int ORIGIN_ID // executor == tx.origin
    andBool PROXY_BAL >=Int 1000000000000000000

[internal]
; internal functions might need some special settings
; memoryUsed, localMem, ...

; blockers:
; - it modifies localMem A LOT
; - DATA is bytes => indefinite size in localMem, gas consumption, ...
[getTransactionHash]
k: (#execute => #execute) ~> _
output: _
statuscode: _
this: PROXY_ID
msg_sender: MSG_SENDER
callData: _
callValue: 0
wordStack:
    NONCE : GASTOKEN : GAS_PRICE : DATAGAS : SAFETXGAS : OPERATION : DATA : VALUE : TO : WS
 => TXHASH : _
localMem: _ => _
pc: 8283 => 9025
gas: G => _
memoryUsed: _ => _
log: _
refund: _
proxy_storage: _
+requires:
    // Range
    andBool #rangeAddress(MSG_SENDER)
    andBool #rangeUInt(256, NONCE)
    andBool #rangeUInt(256, GASTOKEN)
    andBool #rangeUInt(256, GAS_PRICE)
    andBool #rangeUInt(256, DATAGAS)
    andBool #rangeUInt(256, SAFETXGAS)
    andBool #rangeUInt(256, OPERATION)
    andBool #rangeUInt(256, DATA)
    andBool #rangeUInt(256, VALUE)
    andBool #rangeUInt(256, TO)
    andBool #rangeUInt(256, TXHASH)
    //
    andBool #sizeWordStack(WS) <=Int 500 //exact?
    andBool #sizeWordStack(WS) >=Int 0
    andBool G >=Int 5000 // 4680

[checkHash]
k: (#execute => #execute) ~> _
output: _
statuscode: _
this: PROXY_ID
msg_sender: MSG_SENDER
callData: _
callValue: 0
wordStack: SIGNATURES : TXHASH : WS => WS
localMem: _
pc: 13439 => 13936
gas: G => _
memoryUsed: _ => _
log: _
refund: _
proxy_storage: _
+requires:
    // Range
    andBool #rangeAddress(MSG_SENDER)
    andBool #rangeUInt(256, TXHASH)
    andBool #rangeUInt(256, SIGNATURES)
    //
    andBool #sizeWordStack(WS) <=Int 500 //exact?
    andBool #sizeWordStack(WS) >=Int 0
    andBool G >=Int 10000 //

[encodeTransactionData]
; output = bytes32(32) bytes32(66) bytes1(0x19) bytes1(0x1) bytes32(DOMAIN_SEPARATOR) bytes32(SAFE_TX_HASH) bytes30(0)
; size = 160
output: _ => #encodeArgs( #bytes(
                #parseHexWord("0x19") : #parseHexWord("0x1")
                : #encodeArgs(#bytes32(DOMAIN_SEPARATOR), #bytes32(SAFE_TX_HASH))
             ))
statusCode: _ => EVMC_SUCCESS
this: PROXY_ID
msg_sender: MSG_SENDER
callData: #abiCallData("encodeTransactionData", (
            #address(TO),
            #uint256(VALUE),
            #toBytes(DATA, DATA_LEN),
            ; Enum.Operation operation, represented as uint8
            #uint8(OPERATION),
            #uint256(SAFE_TX_GAS),
            #uint256(DATA_GAS),
            #uint256(GAS_PRICE),
            #address(GAS_TOKEN),
            #address(REFUND_RECEIVER),
            #uint256(NONCE) ))
callValue: 0
proxy_storage:
    (#hashedLocation({COMPILER}, {MASTER_COPY}, .IntList) |-> MASTER_COPY_ID)
    (#hashedLocation({COMPILER}, {DOMAIN_SEPARATOR}, .IntList) |-> DOMAIN_SEPARATOR)
    _:Map
+requires:
    // Range
    andBool #rangeAddress(PROXY_ID)
    andBool #rangeAddress(MSG_SENDER)

    andBool #rangeAddress(          TO)
    andBool #rangeUInt( 256,        VALUE)
    andBool #rangeUInt( 256,        DATA_LEN)
    andBool #rangeBytes( DATA_LEN,  DATA)
    andBool #rangeUInt(   8,        OPERATION)
    ; enum Enum.Operation, 3 possible values encoded to 0-2.
    andBool OPERATION <=Int 2
    andBool #rangeUInt( 256,        SAFE_TX_GAS)
    andBool #rangeUInt( 256,        DATA_GAS)
    andBool #rangeUInt( 256,        GAS_PRICE)
    andBool #rangeAddress(          GAS_TOKEN)
    andBool #rangeAddress(          REFUND_RECEIVER)
    andBool #rangeUInt( 256,        NONCE)

    andBool #rangeAddress(          MASTER_COPY_ID)
    andBool #rangeBytes( 32,        DOMAIN_SEPARATOR)

    andBool SAFE_TX_HASH ==Int keccak( #encodeArgs(
                                 #bytes32(#parseHexWord({SAFE_TX_TYPEHASH})),
                                 #address(TO),
                                 #uint256(VALUE),
                                 #bytes32(keccak(#asByteStackInWidth(DATA, DATA_LEN))),
                                 #uint8(OPERATION),
                                 #uint256(SAFE_TX_GAS),
                                 #uint256(DATA_GAS),
                                 #uint256(GAS_PRICE),
                                 #address(GAS_TOKEN),
                                 #address(REFUND_RECEIVER),
                                 #uint256(NONCE) ))

; symbolic values for all parameters including DATA. Fixed DATA length.
[encodeTransactionData-data32]
+requires:
    andBool DATA_LEN ==Int 32

[encodeTransactionData-data33]
+requires:
    andBool DATA_LEN ==Int 33

[signatureSplit]
output: _ => #encodeArgs(#uint8(SIG_V), #bytes32(SIG_R), #bytes32(SIG_S))
statusCode: _ => EVMC_SUCCESS
this: PROXY_ID
msg_sender: MSG_SENDER
callData: #abiCallData("signatureSplit", #toBytes(SIGNATURES, 65 *Int NR_SIG), #uint256(POS))
callValue: 0
proxy_storage:
    _:Map
+requires:
    // Range
    andBool #rangeAddress(PROXY_ID)
    andBool #rangeAddress(MSG_SENDER)
    andBool #rangeUInt(256, 65 *Int NR_SIG)
    andBool #range(0 <= POS < NR_SIG)
    andBool #rangeBytes(65 *Int NR_SIG, SIGNATURES)

    //substitutions
    andBool SIG_R ==Int #asWord( #bytesSegment(SIGNATURES, 65 *Int POS,         32, 65 *Int NR_SIG) )
    andBool SIG_S ==Int #asWord( #bytesSegment(SIGNATURES, 65 *Int POS +Int 32, 32, 65 *Int NR_SIG) )
    andBool SIG_V ==Int #asWord( #bytesSegment(SIGNATURES, 65 *Int POS +Int 64,  1, 65 *Int NR_SIG) )

    //fixed length
    andBool NR_SIG ==Int 3

[signatureSplit-pos0]
+requires:
    andBool POS ==Int 0

[signatureSplit-pos1]
+requires:
    andBool POS ==Int 1

[signatureSplit-pos2]
+requires:
    andBool POS ==Int 2

; todo SIG_LEN is not necessarily multiple of 65.
; function checkSignatures(bytes32 dataHash, bytes data, bytes signatures, bool consumeHash)
[checkSignatures]
output: _ => _
statusCode: _ => EVMC_SUCCESS
this: PROXY_ID
msg_sender: MSG_SENDER
callData: #abiCallData("checkSignatures", (
            #bytes32(DATA_HASH),
            #toBytes(DATA, DATA_LEN),
            #toBytes(SIG_BYTES, 65 *Int NR_SIG),
            #bool(CONSUME_HASH) ))
callValue: 0
proxy_storage:
    (#hashedLocation({COMPILER}, {MASTER_COPY}, .IntList) |-> MASTER_COPY_ID)
    (#hashedLocation({COMPILER}, {THRESHOLD}, .IntList) |-> THRESHOLD)
    _:Map
+requires:
    // Range
    andBool #rangeAddress(PROXY_ID)
    andBool #rangeAddress(MSG_SENDER)

    andBool #rangeBytes( 32,            DATA_HASH)
    andBool #rangeUInt( 256,            DATA_LEN)
    andBool #rangeBytes( DATA_LEN,      DATA)
    andBool #rangeUInt( 256,            65 *Int NR_SIG)
    andBool #rangeBytes(65 *Int NR_SIG, SIG_BYTES)
    andBool #range( 0 <=                CONSUME_HASH <= 1)

    andBool #rangeAddress(              MASTER_COPY_ID)
    andBool #rangeUInt(256,             THRESHOLD)

    ; not used for now
    andBool DATA_LEN ==Int 0

[checkSignatures-threshold-0]
output: _ => #encodeArgs( #bool(1) )
+requires:
    andBool NR_SIG ==Int 0
    andBool THRESHOLD ==Int NR_SIG

[checkSignatures-threshold-too-large]
output: _ => #encodeArgs( #bool(0) )
+requires:
    andBool NR_SIG ==Int 0
    andBool THRESHOLD >Int NR_SIG

; case SIG_V > 26, 3rd branch in checkSignatures for loop.
[checkSignatures-threshold-1-sigv-2]
+requires:
    andBool NR_SIG ==Int 1
    andBool THRESHOLD ==Int NR_SIG
    andBool POS ==Int 0

    ; (v, r, s) = signatureSplit(signatures, i)
    andBool SIG_R ==Int #asWord( #bytesSegment(SIG_BYTES, 65 *Int POS,         32, 65 *Int NR_SIG) )
    andBool SIG_S ==Int #asWord( #bytesSegment(SIG_BYTES, 65 *Int POS +Int 32, 32, 65 *Int NR_SIG) )
    andBool SIG_V ==Int #asWord( #bytesSegment(SIG_BYTES, 65 *Int POS +Int 64,  1, 65 *Int NR_SIG) )
    andBool SIG_V >=Int 2

    andBool ECREC_DATA ==K #encodeArgs( #bytes32(DATA_HASH), #uint8(SIG_V), #bytes32(SIG_R), #bytes32(SIG_S) )

; #ecrecEmpty(ECREC_DATA)
[checkSignatures-threshold-1-sigv-2-empty]
output: _ => #encodeArgs( #bool(0) )
+requires:
    andBool #ecrecEmpty( ECREC_DATA )

; notBool #ecrecEmpty(ECREC_DATA)
[checkSignatures-threshold-1-sigv-2-ne]
proxy_storage:
    (#hashedLocation({COMPILER}, {MASTER_COPY}, .IntList) |-> MASTER_COPY_ID)
    (#hashedLocation({COMPILER}, {THRESHOLD}, .IntList) |-> THRESHOLD)
    ; owners[currentOwner]
    (#hashedLocation({COMPILER}, {OWNERS}, CURRENT_OWNER) |-> NEXT_OF_CURRENT_OWNER)
    _:Map
+requires:
    andBool #rangeAddress(NEXT_OF_CURRENT_OWNER)

    ; currentOwner = ecrecover(dataHash, v, r, s)
    andBool notBool #ecrecEmpty( ECREC_DATA )
    andBool CURRENT_OWNER:Int ==K #symEcrec( ECREC_DATA )

; owners[currentOwner] != 0
[checkSignatures-threshold-1-sigv-2-ne-success]
output: _ => #encodeArgs( #bool(1) )
+requires:
    andBool NEXT_OF_CURRENT_OWNER =/=Int 0

; owners[currentOwner] == 0
[checkSignatures-threshold-1-sigv-2-ne-notOwner]
output: _ => #encodeArgs( #bool(0) )
+requires:
    andBool NEXT_OF_CURRENT_OWNER ==Int 0

[pgm]
compiler: "Solidity"
; address masterCopy
master_copy: 0
; mapping (address => address) internal modules
modules: 1
; mapping(address => address) internal owners
owners: 2
; uint256 ownerCount
ownercount: 3
; uint256 internal threshold
threshold: 4
; uint256 public nonce
nonce: 5
; bytes32 public domainSeparator
domain_separator: 6
; mapping(bytes32 => uint256) signedMessage
signed_message: 7
; mapping(address => mapping(bytes32 => uint256)) approvedHashes
approved_hashes: 8
safe_tx_typehash: "0x14d461bc7412367e924637b363c7bf29b8f47e2f84869f4426e5633d8af47b20"
master_copy_code: ""
proxy_code: "0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634555d5c91461008b5780635c60da1b146100b6575b73ffffffffffffffffffffffffffffffffffffffff600054163660008037600080366000845af43d6000803e6000811415610086573d6000fd5b3d6000f35b34801561009757600080fd5b506100a061010d565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb610116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006002905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a723058209831bad75772164414931a91aa4e9e2be55d2879d839299b8d19bbe1a373cde60029"
