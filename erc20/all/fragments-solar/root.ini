[root]
k:     #dummy
    ~> #assume V_CONF_BEFORE           ==K String2Id("V_CONF_BEFORE")
    ~> #assume V_OLD_STORAGE          ==K String2Id("V_OLD_STORAGE")
    ~> #assume V_OLD_LOG               ==K String2Id("V_OLD_LOG")
    ~> #assume V_OLD_REFUND            ==K String2Id("V_OLD_REFUND")
    ~> #saveEthereum V_CONF_BEFORE
    ~> #saveStorage ACCT_ID V_OLD_STORAGE
    ~> #saveLog V_OLD_LOG
    ~> #saveRefund V_OLD_REFUND
schedule: PETERSBURG
output: _ => _
statusCode: _ => _
gas: #gas(INITGAS, 0, 0) => _
callData: _ => _
; for view functions tested that <storage> is unchanged
storage: S => _
origStorage: S
; for view functions tested that <log> is unchanged
log: _ => _
refund: _ => _
commandVars: .Map  => _
requires:
ensures:
comment:
attribute:
